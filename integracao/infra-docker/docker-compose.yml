version: "3"

services:
  # banco de dados
  postgres:
    image: postgres:alpine
    container_name: postgres-mandso
    environment:
      POSTGRES_DB: mandsodb
      POSTGRES_USER: mandso
      POSTGRES_PASSWORD: admin
      LANG: pt_BR.UTF8
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  # aplicações
  app-gerenciamento:
    build: .
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: mandsodb
      POSTGRES_PORT: 5432
      POSTGRES_USER: mandso
      POSTGRES_PASSWORD: admin
    ports:
      - "8000:8000"
  app-frontend:

  # sonarqube - para fazer verificação de código fonte (SAST)
  sonar:
    image: sonarqube:lts-community  
    container_name: sonar
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

  # SonarQube CLI - para fazer análise de código fonte atraves de linha de comando
  sonar_cli:
    build: ./sonar_cli/.
    container_name: sonar_cli

  # OWASP Dependency Check - para fazer verificação de dependências
  owasp_dc:
    image: owasp/dependency-check
    container_name: owasp_dc
    volumes:
      - owasp-dc:/src
    command: "--scan /src --format 'ALL' --out /src/report"

  # OWASP ZAP - para fazer verificação de segurança DAST
  owasp_zap:
    #image="zaproxy/zap-bare:2.14.0",       # usando esta imagem para fins de teste, porque é mais leve (é muito restrita)
    image: "zaproxy/zap-stable"
    volumes: 
      - owasp_zap:/zap/wrk
    command: "zap.sh -daemon -config api.disablekey=true"

volumes:
  postgres_data:
  sonar_data:
  sonar_extensions:
  sonar_logs:
  owasp-dc:
  owasp_zap:

