# Generated by Django 4.2.13 on 2024-07-15 22:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('seguranca', '0014_alter_resultadoscan_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=500, verbose_name='Descrição')),
                ('protocolo', models.CharField(max_length=50, verbose_name='Protocolo de serviço')),
                ('url', models.URLField(verbose_name='URL')),
                ('usuario', models.CharField(max_length=50, verbose_name='Usuário')),
                ('senha', models.CharField(max_length=50, verbose_name='Senha')),
                ('status', models.CharField(choices=[['ATIVO', 'Ativo'], ['INATIVO', 'Desativado'], ['EM MANUTENÇÃO', 'Em manutenção'], ['EM FALHA', 'Em falha'], ['DESCONTINUADO', 'Descontinuado']], default='ATIVO', max_length=20, verbose_name='Situação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('data_modificacao', models.DateTimeField(auto_now=True, verbose_name='Data Modificação')),
                ('aplicacoes', models.ManyToManyField(blank=True, related_name='servico_aplicacoes', to='seguranca.aplicacao')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'db_table': 'tb_servico',
                'ordering': ['nome'],
                'permissions': [('can_view_servico', 'Can view serviços'), ('can_change_servico', 'Can change serviços'), ('can_add_servico', 'Can add serviços'), ('can_delete_servico', 'Can delete serviços')],
            },
        ),
        migrations.CreateModel(
            name='TipoModeloDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=10, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=1000, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Modelo de Documento',
                'verbose_name_plural': 'Tipos de Modelo de Documento',
                'db_table': 'tb_tipo_modelo_documento',
                'ordering': ['nome'],
                'permissions': [('can_view_tipo_modelo_documento', 'Can view tipos modelo documento'), ('can_change_tipo_modelo_documento', 'Can change tipos modelo documento'), ('can_add_tipo_modelo_documento', 'Can add tipos modelo documento'), ('can_delete_tipo_modelo_documento', 'Can delete tipos modelo documento')],
            },
        ),
        migrations.AlterField(
            model_name='ativoinfraestrutura',
            name='status',
            field=models.CharField(choices=[['ATIVO', 'Ativo'], ['INATIVO', 'Desativado'], ['EM MANUTENÇÃO', 'Em manutenção'], ['EM FALHA', 'Em falha'], ['DESCONTINUADO', 'Descontinuado']], max_length=20, verbose_name='Situação do ativo'),
        ),
        migrations.AlterField(
            model_name='sistemavarredura',
            name='status',
            field=models.CharField(choices=[['ATIVO', 'Ativo'], ['INATIVO', 'Desativado'], ['EM MANUTENÇÃO', 'Em manutenção'], ['EM FALHA', 'Em falha'], ['DESCONTINUADO', 'Descontinuado']], default='ATIVO', max_length=20, verbose_name='Situação'),
        ),
        migrations.CreateModel(
            name='Servidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=500, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[['ARQUIVOS', 'Servidor de arquivos'], ['WEB', 'Servidor Web'], ['BANCO_DADOS', 'Servidor de Banco de Dados'], ['APLICACAO', 'Servidor de Aplicação'], ['CORREIO', 'Servidor de Correio'], ['DNS', 'Servidor de DNS'], ['PROXY', 'Servidor Proxy'], ['FIREWALL', 'Servidor Firewall'], ['MONITORAMENTO', 'Servidor de Monitoramento'], ['BACKUP', 'Servidor de Backup'], ['LOGS', 'Servidor de Logs'], ['FTP', 'Servidor FTP'], ['MIDIA', 'Servidor de Mídia'], ['CLUSTER', 'Cluster'], ['OUTRO', 'Outros']], max_length=50, verbose_name='Tipo de servidor')),
                ('ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='Endereço IP')),
                ('sistema_operacional', models.CharField(max_length=50, verbose_name='Sistema Operacional')),
                ('arquitetura', models.CharField(max_length=50, verbose_name='Arquitetura')),
                ('processador', models.CharField(max_length=50, verbose_name='Processador')),
                ('memoria', models.CharField(max_length=50, verbose_name='Memória')),
                ('disco', models.CharField(max_length=50, verbose_name='Disco')),
                ('status', models.CharField(choices=[['ATIVO', 'Ativo'], ['INATIVO', 'Desativado'], ['EM MANUTENÇÃO', 'Em manutenção'], ['EM FALHA', 'Em falha'], ['DESCONTINUADO', 'Descontinuado']], default='ATIVO', max_length=20, verbose_name='Situação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('data_modificacao', models.DateTimeField(auto_now=True, verbose_name='Data Modificação')),
                ('aplicacoes', models.ManyToManyField(blank=True, related_name='servidor_aplicacoes', to='seguranca.aplicacao')),
                ('servicos', models.ManyToManyField(blank=True, related_name='servidor_servicos', to='seguranca.servico')),
            ],
            options={
                'verbose_name': 'Servidor',
                'verbose_name_plural': 'Servidores',
                'db_table': 'tb_servidor',
                'ordering': ['nome'],
                'permissions': [('can_view_servidor', 'Can view servidores'), ('can_change_servidor', 'Can change servidores'), ('can_add_servidor', 'Can add servidores'), ('can_delete_servidor', 'Can delete servidores')],
            },
        ),
        migrations.AddField(
            model_name='servico',
            name='servidor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguranca.servidor', verbose_name='Servidor'),
        ),
        migrations.CreateModel(
            name='Rede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=500, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[['LAN', 'Local Area Network'], ['WAN', 'Wide Area Network'], ['WIFI', 'Rede sem fio'], ['VPN', 'Rede Privada Virtual'], ['DMZ', 'Zona Desmilitarizada'], ['INTRANET', 'Intranet'], ['EXTRANET', 'Extranet']], default='LAN', max_length=50, verbose_name='Tipo de rede')),
                ('ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='Endereço IP')),
                ('mascara', models.GenericIPAddressField(protocol='IPv4', verbose_name='Máscara de subrede')),
                ('gateway', models.GenericIPAddressField(protocol='IPv4', verbose_name='Gateway')),
                ('dns_primario', models.GenericIPAddressField(protocol='IPv4', verbose_name='DNS Primário')),
                ('dns_secundario', models.GenericIPAddressField(null=True, protocol='IPv4', verbose_name='DNS Secundário')),
                ('status', models.CharField(choices=[['ATIVO', 'Ativo'], ['INATIVO', 'Desativado'], ['EM MANUTENÇÃO', 'Em manutenção'], ['EM FALHA', 'Em falha'], ['DESCONTINUADO', 'Descontinuado']], default='ATIVO', max_length=20, verbose_name='Situação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('data_modificacao', models.DateTimeField(auto_now=True, verbose_name='Data Modificação')),
                ('servidores', models.ManyToManyField(blank=True, related_name='rede_servidores', to='seguranca.servidor')),
            ],
            options={
                'verbose_name': 'Rede',
                'verbose_name_plural': 'Redes',
                'db_table': 'tb_rede',
                'ordering': ['nome'],
                'permissions': [('can_view_rede', 'Can view redes'), ('can_change_rede', 'Can change redes'), ('can_add_rede', 'Can add redes'), ('can_delete_rede', 'Can delete redes')],
            },
        ),
        migrations.CreateModel(
            name='ModeloDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=1000, verbose_name='Descrição')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('data_modificacao', models.DateTimeField(auto_now=True, verbose_name='Data Modificação')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguranca.tipomodelodocumento', verbose_name='Tipo de Modelo')),
            ],
            options={
                'verbose_name': 'Modelo de Documento',
                'verbose_name_plural': 'Modelos de Documento',
                'db_table': 'tb_modelo_documento',
                'ordering': ['nome'],
                'permissions': [('can_view_modelo_documento', 'Can view modelos documento'), ('can_change_modelo_documento', 'Can change modelos documento'), ('can_add_modelo_documento', 'Can add modelos documento'), ('can_delete_modelo_documento', 'Can delete modelos documento')],
            },
        ),
        migrations.CreateModel(
            name='BancoDados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=500, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[['ORACLE', 'Oracle'], ['SQLSERVER', 'SQL Server'], ['MYSQL', 'MySQL'], ['POSTGRESQL', 'PostgreSQL'], ['MONGODB', 'MongoDB'], ['COUCHDB', 'CouchDB'], ['REDIS', 'Redis'], ['NEO4J', 'Neo4j'], ['CASSANDRA', 'Cassandra'], ['MARIADB', 'MariaDB'], ['FIREBIRD', 'Firebird'], ['DB2', 'DB2'], ['SYBASE', 'Sybase'], ['INFORMIX', 'Informix'], ['SQLITE', 'SQLite'], ['H2', 'H2'], ['HSQLDB', 'HSQLDB'], ['DERBY', 'Derby'], ['OUTRO', 'Outro']], max_length=50, verbose_name='Tipo de banco de dados')),
                ('ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='Endereço IP')),
                ('porta', models.IntegerField(verbose_name='Porta')),
                ('usuario', models.CharField(max_length=50, verbose_name='Usuário')),
                ('senha', models.CharField(max_length=50, verbose_name='Senha')),
                ('status', models.CharField(choices=[['ATIVO', 'Ativo'], ['INATIVO', 'Desativado'], ['EM MANUTENÇÃO', 'Em manutenção'], ['EM FALHA', 'Em falha'], ['DESCONTINUADO', 'Descontinuado']], default='ATIVO', max_length=20, verbose_name='Situação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data Cadastro')),
                ('data_modificacao', models.DateTimeField(auto_now=True, verbose_name='Data Modificação')),
                ('aplicacoes', models.ManyToManyField(blank=True, related_name='bancodados_aplicacoes', to='seguranca.aplicacao')),
                ('servidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seguranca.servidor', verbose_name='Servidor')),
            ],
            options={
                'verbose_name': 'Banco de Dados',
                'verbose_name_plural': 'Bancos de Dados',
                'db_table': 'tb_banco_dados',
                'ordering': ['nome'],
                'permissions': [('can_view_banco_dados', 'Can view bancos dados'), ('can_change_banco_dados', 'Can change bancos dados'), ('can_add_banco_dados', 'Can add bancos dados'), ('can_delete_banco_dados', 'Can delete bancos dados')],
            },
        ),
        migrations.AddField(
            model_name='aplicacao',
            name='bancos_dados',
            field=models.ManyToManyField(blank=True, related_name='aplicacoes_banco_dados', to='seguranca.bancodados'),
        ),
        migrations.AddField(
            model_name='aplicacao',
            name='servicos',
            field=models.ManyToManyField(blank=True, related_name='aplicacoes_servico', to='seguranca.servico'),
        ),
        migrations.AddField(
            model_name='aplicacao',
            name='servidores',
            field=models.ManyToManyField(blank=True, related_name='aplicacoes_servidor', to='seguranca.servidor'),
        ),
    ]
